" vim: filetype=vim fdm=marker ts=4 sw=4 sts=4 expandtab
"
" Sample configuration file for vifm (last updated: 24 Oct, 2014)
" You can edit this file by hand.
" The " character at the beginning of a line comments out the line.
" Blank lines are ignored.
" The basic format for each item is shown with an example.

" ------------------------------------------------------------------------------

" This is the actual command used to start vi.  The default is vim.
" If you would like to use another vi clone such Elvis or Vile
" you will need to change this setting.

set vicmd=vim
" set vicmd=elvis\ -G\ termcap
" set vicmd=vile

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set trash

" This is how many directories to store in the directory history.

set history=100

" Automatically resolve symbolic links on l or Enter.

set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

set fastrun

" Natural sort of (version) numbers within text.

set sortnumbers

" Maximum number of changes that can be undone.

set undolevels=100

" If you installed the vim.txt help file set vimhelp.
" If would rather use a plain text help file set novimhelp.

set novimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set norunexec

" Use KiB, MiB, ... instead of KB, MB, ...

set noiec

" Selected color scheme

colorscheme Default

" The FUSE_HOME directory will be used as a root dir for all FUSE mounts.
" Unless it exists with write/exec permissions set, vifm will attempt to
" create it.

set fusehome=/tmp/vifm_FUSE

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.

" set timefmt=%m/%d\ %H:%M
set timefmt=%y/%m/%d\ %H:%M

" Show list of matches on tab complition in command-line mode

set wildmenu

" Ignore case in search patterns unless it contains at least one uppercase
" letter

set ignorecase
set smartcase

" Don't highlight search results automatically

set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists

set scrolloff=4

" Don't do to much requests to slow file systems

set slowfs=curlftpfs

" Set custom status line look

set statusline="  %t%= %A %10u:%-7g %15s %20d  "

" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

mark D ~/Download
mark P ~/Pictures
mark F ~/Document
mark h ~/
mark t /tmp
mark d ~/Data
mark l ~/Data/Latest
mark c ~/Data/CHM
mark p ~/Data/PDF

" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window
" %M same as %m, but l (or Enter) key is handled like for :locate.
" %i completely ignore command output.
" %S show command output in the status bar.
" %s execute command in split window of active terminal

command! df df -x aufs -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart

" ------------------------------------------------------------------------------

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" Pdf
filextype *.pdf evince %c %i &, okular %c %i &
fileviewer *.pdf pdftotext -nopgbrk %c -

" CHM
filextype *.chm kchmviewer %c %i &

" PostScript
filextype *.ps,*.eps,*.ps.gz
        \ {View in zathura}
        \ zathura %f,
        \ {View in gv}
        \ gv %c %i &,

" Djvu
filextype *.djvu
        \ {View in zathura}
        \ zathura %f,
        \ {View in apvlv}
        \ apvlv %f,

" Audio
filetype *.wav,*.mp3,*.flac,*.ogg,*.m4a,*.wma,*.ape,*.ac3
       \ {Play using ffplay}
       \ ffplay -nodisp %c,
       \ {Play using MPlayer}
       \ mplayer %f,
       \ ffplay %c,
fileviewer *.mp3 mp3info
fileviewer *.flac soxi

" Video
        " \ ffplay -x 1024 -y 576 %c &>/dev/null &,
filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.vob,*.flv,*.m2v,*.mov,*.webm,*.ts,*.m4v,*.vdat
        \ {View using mpv}
        \ mpv -fs --keep-open=yes &>/dev/null &,
        \ {View using ffplay}
        \ ffplay -fs &>/dev/null &,
        \ {View using totem}
        \ totem %f,
        \ {View using gnome mplayer}
        \ gnome-mplayer %f,
        \ {View using mplayer}
        \ mplayer %f,
fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.vob,*.flv,*.m2v,*.mov,*.webm,*.ts,*.m4v,*.vdat
        " \ mediainfo %c 2>&1
        " Contain , will faild: \ ffprobe -pretty %c 2>&1 | sed -n "/Input/,$p"
        \ ffprobe -pretty %c 2>&1 | tail -n 20 | egrep -v 'libav|libp|libs'

" Web
filextype *.html,*.htm
        \ {Open with google-chrome}
        \ google-chrome --incognito %f %i &,
        \ {Open with firefox}
        \ firefox -private %f %i &
filetype *.html,*.htm 
        \ {open with nvim}
        \ nvim

" Object
filetype *.o nm %f | less

" Man page
filetype *.[1-8] gtbl %c | groff -Tascii -man | less
fileviewer *.[1-8] gtbl %c | groff -Tascii -man | col -b

" Image
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
        \ {View in sxiv}
        \ isxiv %f %i,
        \ {View in gpicview}
        \ gpicview %c,
fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm mediainfo %f

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f,

" GPG signature
filetype *.asc
       \ {Check signature}
       \ !!gpg --verify %c,

" Torrent
filetype *.torrent ktorrent %f &
fileviewer *.torrent dumptorrent -v %c

" FuseZipMount
filetype *.zip,*.jar,*.war,*.ear,*.oxt
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ zip -sf %c | less,
       \ {Extract here}
       \ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c

" ArchiveMount
filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c

" Rar2FsMount and rar archives
filetype *.rar
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.rar unrar v %c

" IsoMount
filetype *.iso
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR,

" Fuse7z and 7z archives
filetype *.7z
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c

" Office files
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice %f &
fileviewer *.doc catdoc %c
fileviewer *.docx, docx2txt.pl %f -

" TuDu files
filetype *.tudu tudu -f %c

" Qt projects
filextype *.pro qtcreator %f &

" Directories
filextype */
        \ {View in thunar}
        \ Thunar %f &,
fileviewer .*/,*/ tree %f

" Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
"
" 256-color terminal
" fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
"
" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
"
" fileviewer * pygmentize -O style=monokai -f console256 -g

" Displaying pictures in terminal
"
" fileviewer *.jpg,*.png shellpic %c

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
filetype * xdg-open
" For OS X:
" filetype * open
" For Windows:
" filetype * start, explorer

" ------------------------------------------------------------------------------

" What should be saved automatically between vifm runs
" Like in previous versions of vifm
" set vifminfo=options,filetypes,commands,bookmarks,dhistory,state,cs
" Like in vi
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks

" ------------------------------------------------------------------------------

" Examples of configuring both panels

" Customize view columns a bit (enable ellipsis for truncated file names)
"
" windo set viewcolumns=-{name}..,6{}.

" Filter-out build and temporary files
"
" windo filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" ------------------------------------------------------------------------------

" Sample mappings

" Start shell in current directory
" nnoremap s :shell<cr>

" Display sorting dialog
" nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in new instance of gvim
nnoremap o <cr>
" Open file in existing instance of gvim
nnoremap O :!gvim --remote-tab-silent %f<cr>

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" copy current file or selected files to other window
nnoremap cy :copy<cr>
vnoremap cy :copy<cr>

" copy current file or selected files to other window
nnoremap cm :move<cr>
vnoremap cm :move<cr>

" Yank first two word into the clipboard
nnoremap yw :echo system("echo " . expand('%c:t') . "| cut -d ' ' -f1,2 | tr '[:upper:]' '[:lower:]' | tr -d '\n' | xsel -b -i") | echo ' COPY first two word on line'<cr>

" Yank current directory path into the clipboard
nnoremap yd :echo system("echo " . expand('%d') . "| xsel -b -i") | echo ' COPY ' . expand('%d')<cr>

" Yank current file path into the clipboard
nnoremap yf :echo system("echo " . expand('%c:p') . "| xsel -b -i") | echo ' COPY ' . expand('%c:p')<cr>

" Yank current file name into the clipboard
nnoremap yn :echo system("echo " . expand('%c:t') . "| xsel -b -i") | echo ' COPY ' . expand('%c:t')<cr>

" yank root of current file's name into the clipboard
nnoremap yr :echo system("echo " . expand('%c:r') . "| xsel -b -i") | echo ' COPY ' . expand('%c:r')<cr>

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw<c-w>

" Open console in current directory
nnoremap ,t :!gnome-terminal &<cr>

" Open vim to edit vifmrc and apply settings after returning to vifm
" Bug: why can not restart ?  
" nnoremap ,c :write | execute ':!nvim ~/.vifm/vifmrc' | restart<cr>
" Open gvim to edit vifmrc
nnoremap ,c :!gvim --remote-tab-silent $MYVIFMRC &<cr>
nnoremap ,e :!gvim --remote-tab-silent ~/.vifm/colors/my &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
" nnoremap <f3> :!less %f<cr>
" nnoremap <f4> :edit<cr>
" nnoremap <f5> :copy<cr>
" nnoremap <f6> :move<cr>
" nnoremap <f7> :mkdir<space>
" nnoremap <f8> :delete<cr>

" ------------------------------------------------------------------------------

" Various customization examples

" Use ag (the silver searcher) instead of grep
"
" set grepprg=ag\ --line-numbers\ %i\ %a\ %s

" Add additional place to look for executables
"
" let $PATH=$HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
"
" nnoremap <left> <nop>

" --- CUSTOM SETTINGS ----------------------------------------------------------
"
set vimhelp
colorscheme my

" --- devicons
" file types
set classify=' :dir:, :exe:, :reg:, :link:'
" various file names
set classify+=' ::*.styl::, ::*.scss::, ::*.htm::, ::*.html::, ::*.slim::, ::*.ejs::, ::*.css::, ::*.less::, ::*.md::, ::*.markdown::, ::*.json::, ::*.js::, ::*.jsx::, ::*.rb::, ::*.php::, ::*.py::, ::*.pyc::, ::*.pyo::, ::*.pyd::, ::*.coffee::, ::*.mustache::, ::*.hbs::, ::*.conf::, ::*.ini::, ::*.yml::, ::*.bat::, ::*.jpg::, ::*.jpeg::, ::*.bmp::, ::*.png::, ::*.gif::, ::*.ico::, ::*.twig::, ::*.cpp::, ::*.c++::, ::*.cxx::, ::*.cc::, ::*.cp::, ::*.c::, ::*.hs::, ::*.lhs::, ::*.lua::, ::*.java::, ::*.sh::, ::*.fish::,λ ::*.ml::,λ ::*.mli::, ::*.diff::, ::*.db::, ::*.sql::, ::*.dump::, ::*.clj::, ::*.cljc::, ::*.cljs::, ::*.edn::, ::*.scala::, ::*.go::, ::*.dart::, ::*.xul::, ::*.sln::, ::*.suo::, ::*.pl::, ::*.pm::, ::*.t::, ::*.rss::, ::*.f#::, ::*.fsscript::, ::*.fsx::, ::*.fs::, ::*.fsi::, ::*.rs::, ::*.rlib::, ::*.d::, ::*.erl::, ::*.hrl::, ::*.vim::, ::*.ai::, ::*.psd::, ::*.psb::, ::*.ts::, ::*.jl::, ::*.rc::, ::*.xml::, ::*.log::, ::*.avi::, ::*.wmv::, ::*.mpeg::, ::*.mpg::, ::*.mkv::, ::*.flv::, ::*.mp4::, ::*.vdat::, ::*.mp3::, ::*.flac::, ::*.wav::, ::*.ogg::, ::*.epub::, ::*.pdf::, ::*.7z::, ::*.apk::, ::*.bz2::, ::*.cab::, ::*.cpio::, ::*.deb::, ::*.gem::, ::*.gz::, ::*.gzip::, ::*.lha::, ::*.lzh::, ::*.lzma::, ::*.rar::, ::*.rpm::, ::*.tar::, ::*.tgz::, ::*.xz::, ::*.zip::'
" exact file names
set classify+=' ::../::,X1 ::exact-match-case-sensitive-1.txt::,X2 ::exact-match-case-sensitive-2::, ::gruntfile.coffee::, ::gruntfile.js::, ::gruntfile.ls::, ::gulpfile.coffee::, ::gulpfile.js::, ::gulpfile.ls::, ::dropbox::, ::.ds_store::, ::.gitconfig::, ::.gitignore::, ::.bashrc::, ::.bashprofile::, ::favicon.ico::, ::license::, ::node_modules::, ::react.jsx::, ::procfile::, ::.Xdefaults::, ::.Xresources::, ::.dmrc::, ::.fasd::, ::.gitconfig::, ::.jack-settings::, ::.mime.types::, ::.nvidia-settings-rc::, ::.pam_environment::, ::.profile::, ::.recently-used::, ::.selected_editor::, ::.vimrc::, ::.xinputrc::, ::mimeapps.list::, ::user-dirs.dirs::, ::ini::, ::config::'

" Total size of selected files
set statusline="  %t%= %A %10u:%-7g %15E %20d  "

" --- filetype improved
" image
filextype *.jpg,*.jpeg,*.gif,*.png,*.bmp
        \ feh -Z  %c %i

" specail files
filetype *.run,*.xpi,*.sh
        \ file %c %i
fileviewer *.run,*.xpi
        \ stat %c %m

" compress files
filetype *.tar,*.zip,*.cpio,*.deb,*.rpm,*.gem,*.7z,*.cab,*.lzh,*.rar,*.gz,*.bz2,*.lzma,*.xz 
        \ {Extract files smarty via dtrx}
        \ dtrx %c --one=inside %%, 
fileviewer *.tar,*.zip,*.cpio,*.deb,*.rpm,*.gem,*.7z,*.cab,*.lzh,*.rar,*.gz,*.bz2,*.lzma,*.xz dtrx %c -l

" --- keymap
" t can selecte multiple file
nmap f /
nmap E :!vim %c<CR>
nmap Q :shell<CR>
nmap s :sort<CR>
nmap S :invert o<CR>
cmap <C-f> :history c<CR>
nmap U :undolist<cr>
nmap J :history<CR>
nmap T :trashes<CR>
nmap ~ :cd ~<CR>
nmap X :com<CR>
nmap x :!xdg-open %c %i<CR>
nmap r :file<CR>
nmap R :reload<CR>
vmap V :invert s<CR>
nmap V :invert s<CR>
nmap B :marks<CR>
nmap ,nf :touch<space>
nmap ,nd :mkdir<space>
nmap ,nl :alink<CR>
vmap t :select<CR>
nmap q :quit<CR>

" disable left right key
" nmap <left> <nop>
" nmap <right> <nop>

" search first one word
nmap * :execute "normal /" . system("echo " . expand('%c:t') . "| cut -d ' ' -f1 | tr '[:upper:]' '[:lower:]'")<CR>nN
" search first two word
nmap & :execute "normal /" . system("echo " . expand('%c:t') . "| cut -d ' ' -f1,2 | tr '[:upper:]' '[:lower:]'")<CR>nN
" search from clipboard
nmap gs :execute "normal /" . system("xsel -b -o")<CR>nN
nmap <F3> gs
nmap ci :s/(\.[a-z0-9]+)$/ - THETOP\1/<CR>

" --- command
command! targz tar czf %a.tar.gz %f %%
command! gdebi gdebi -q %f %m
command! dtrx dtrx %f %m
command! unpack dtrx %f %m
command! rm rm -rf %f
command! trash trash %f
command! mfind find %d -type f -name "*%a*" ! -path "*.git*" ! -path "*fugitive*" %M
" Example: ag 'app.*http.*request'
command! ag ag -i --nocolor --follow --nogroup --hidden --ignore '.git' --ignore 'fugitive' -g '%a' %d %M
command! mv mv %f %a

