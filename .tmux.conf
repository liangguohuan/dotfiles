#
# author:    liangguohuan <liangguohuan@gmail.com>
# modified:  2013 Nov 18
# manual: 
#   - command trigger: c-a [ bind command ]

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#-- base --#

set -g default-terminal "xterm-256color"
setw -g xterm-keys on
# set -g default-terminal "screen-256color"
set -g display-time 3000
set -g history-limit 65535
set -g base-index 1
set -g pane-base-index 2
set -s escape-time 0

#-- mouse --#
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on
set -g mouse-utf8 on
setw -g mode-mouse on

#-- bindkeys --#

set -g prefix ^a
unbind ^b
bind a send-prefix

unbind '"'
bind - splitw -v
unbind %
bind | splitw -h

bind k selectp -U
bind j selectp -D
bind h selectp -L
bind l selectp -R

bind ^k resizep -U 10
bind ^j resizep -D 10
bind ^h resizep -L 10
bind ^l resizep -R 10

bind ^u swapp -U
bind ^d swapp -D

bind ^e last
bind q killp
bind a displayp

bind '~' splitw htop
bind ! splitw ncmpcpp
bind m command-prompt "splitw -h 'exec man %%'"

bind C-c run "tmux save-buffer - | xsel -ib" \; display "Copied tmux buffer to system clipboard"
bind C-v run "tmux set-buffer \"$(xsel -ob)\"; tmux paste-buffer"
bind F4 run "tmux kill-server"

bind r source-file ~/.tmux.conf \; display "Reloaded!"

#-- apps --#
#-- warn: neww ... [command] , the command must be deamon program,
#-------  the window will be closed when the command exec finish.
# new -s fav -n home
# neww -n vim "vim"
# neww -n jekyll -c /media/d/jekyll/dark.github.io "jekyll s -w"
# neww -n ruby -c ~/RubyProjects
# # neww -n top htop # exit the program will kill the window in tmux.
# selectw -t 1

###################################### Tmux Plugin Manager #############################################
#
## List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'seebi/tmux-colors-solarized'
set -g @plugin 'jimeh/tmux-themepack'

# set -g @colors-solarized 'dark'
set -g @themepack 'block/orange'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

